name: release
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  release-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: flutter doctor -v
    - run: flutter pub get
    - run: ./build_web_app.sh
    - run: ./build_web_ext.sh
    - name: Rename files
      run: |
        mv build/web-ext-2.zip build/fn-web-ext-2.zip
        mv build/web-ext-3.zip build/fn-web-ext-3.zip
        mv build/web-app.zip build/fn-web-app.zip
    - uses: softprops/action-gh-release@v1 
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/fn-*.zip
        draft: true
        fail_on_unmatched_files: true
  release-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
    - name: Configure Keystore
      working-directory: android
      env:
        PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
        KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
      run: |
        echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/fn-upload-key.keystore
        echo "storeFile=fn-upload-key.keystore" >> key.properties
        echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
        echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
        echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: flutter doctor -v
    - run: flutter pub get
    - run: flutter build apk --release
    - run: flutter build appbundle --release
    - name: Rename files
      run: |
        cp build/app/outputs/apk/release/app-release.apk build/fn-android.apk
        cp build/app/outputs/bundle/release/app-release.aab  build/fn-android.aab
    - uses: softprops/action-gh-release@v1 
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/*.apk
          build/*.aab
        draft: true
        fail_on_unmatched_files: true
  release-ios:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        RUNNER_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.RUNNER_BUILD_PROVISION_PROFILE_BASE64 }}
        SHARE_EXT_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.SHARE_EXT_BUILD_PROVISION_PROFILE_BASE64 }}
        NOTE_LIST_WIDGET_EXT_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.NOTE_LIST_WIDGET_EXT_BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # https://medium.com/team-rockstars-it/the-easiest-way-to-build-a-flutter-ios-app-using-github-actions-plus-a-key-takeaway-for-developers-48cf2ad7c72a
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        RUNNER_PP_PATH=$RUNNER_TEMP/runner_build_pp.mobileprovision
        SHARE_EXT_PP_PATH=$RUNNER_TEMP/share_ext_build_pp.mobileprovision
        NOTE_LIST_WIDGET_EXT_PP_PATH=$RUNNER_TEMP/note_list_widget_ext_build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$RUNNER_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $RUNNER_PP_PATH
        echo -n "$SHARE_EXT_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $SHARE_EXT_PP_PATH
        echo -n "$NOTE_LIST_WIDGET_EXT_BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $NOTE_LIST_WIDGET_EXT_PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $RUNNER_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        cp $SHARE_EXT_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
        cp $NOTE_LIST_WIDGET_EXT_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: flutter doctor -v
    - run: flutter pub get
    # build ios release
    - run: flutter build ipa --release --export-options-plist=ios/Runner/ExportOptions.plist
    # build safari ext release
    # - run: |
    #     ./build_web_ext.sh
    #     cd safari
    #     xcodebuild -scheme "Fleeting Notes" -archivePath ../build/FN.xcarchive archive
    #     xcodebuild -exportArchive -archivePath ../build/FN.xcarchive -exportOptionsPlist Fleeting\ Notes/ExportOptions.plist -exportPath ../build
    - run: cp build/ios/ipa/Fleeting\ Notes.ipa build/fn-ios.ipa
    - uses: softprops/action-gh-release@v1 
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/*.ipa
        draft: true
        fail_on_unmatched_files: true
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm -rf ~/Library/MobileDevice/Provisioning\ Profiles
  release-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Checkout create-dmg repository
      uses: actions/checkout@v3
      with:
        repository: 'create-dmg/create-dmg'
        path: 'create-dmg'
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: flutter doctor -v
    - run: flutter pub get
    - run: flutter build macos --release
    - run: create-dmg/create-dmg --app-drop-link 400 30 --icon-size 128  build/fn-macos.dmg build/macos/Build/Products/Release/Fleeting\ Notes.app
    - uses: softprops/action-gh-release@v1 
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/*.dmg
        draft: true
        fail_on_unmatched_files: true
  release-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
        sudo apt-get install -y libsecret-1-dev libjsoncpp-dev libsecret-1-0
    - run: flutter doctor -v
    - run: flutter pub get
    - run: flutter build linux --release
    - run: ls build/linux/release/bundle

  release-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7.6'
        cache: true
        channel: 'stable'
    - run: flutter doctor -v
    - run: flutter pub get
    - run: flutter build windows --release
